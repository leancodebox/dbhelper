package remoteservice

import (
	"github.com/go-resty/resty/v2"
    "github.com/spf13/cast"
	"sync"
)

type {{.clientName}}Client struct {
	httpClient *resty.Client
}

var {{.clientName}}Once sync.Once

var {{.clientName}}Std = {{.clientName}}Client{}

func New{{.clientName}}Client() {{.clientName}}Client{
	{{.clientName}}Once.Do(func() {
	    client := resty.New().SetBaseURL("")
	    // Setting a Proxy URL and Port
        //client.SetProxy(config.GetString("T_PROXY"))
        //client.SetBaseURL("https://twitter.com/")
        //client.SetHeaders(headersMap)
        //client.SetAuthToken("")
		{{.clientName}}Std.httpClient = client
	})
	return {{.clientName}}Std
}

func (itself {{.clientName}}Client) Get(data any) (resp *resty.Response, err error) {
	return itself.httpClient.R().SetFormData(map[string]string{
		"keyValue": cast.ToString(data),
	}).Get("url")
}

func (itself {{.clientName}}Client) Post(data any) (resp *resty.Response, err error) {
	return itself.httpClient.R().SetFormData(map[string]string{
		"keyValue": cast.ToString(data),
	}).Post("uri")
}
